-- 집합 연산자

-- COLUMN 개수가 일치해야 집합연산 가능
/*
UNION : 합집합 (중복 X)
UNION ALL : 합집합 (중복 O)
INTERSECT : 교집합
MINUS : 차집합
*/

-- COLUMN 개수가 다르면 오류
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE HIRE_DATE LIKE '04%'
UNION
SELECT FIRST_NAME FROM EMPLOYEES WHERE DEPARTMENT_ID = 20;

-- UNION 
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE HIRE_DATE LIKE '04%'
UNION
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE DEPARTMENT_ID = 20;

-- UNION ALL
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE HIRE_DATE LIKE '04%'
UNION ALL
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE DEPARTMENT_ID = 20;


-- INTERSECT
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE HIRE_DATE LIKE '04%'
INTERSECT
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE DEPARTMENT_ID = 20;

-- MINUS
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE HIRE_DATE LIKE '04%'
MINUS
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE DEPARTMENT_ID = 20;

--------------------------------------------------------------
-- 집합연산자는 DUAL 같은 가상 테이블 데이터를 만들어서 합칠 수도 있다.
SELECT * FROM EMPLOYEES;
SELECT 200 AS 번호, 'HONG' AS 이름, '서울시' AS 지역 FROM DUAL
UNION ALL
SELECT 300, 'LEE', '경기도' FROM DUAL
UNION ALL
SELECT EMPLOYEE_ID, LAST_NAME, 
       CASE SUBSTR(PHONE_NUMBER, 0, 3) WHEN '515' THEN '서울시'
                                       WHEN '590' THEN '경기도'
                                       WHEN '650' THEN '부산시'
                                       WHEN '603' THEN '제주시'
                                       ELSE '해외'
       END 
FROM EMPLOYEES;
