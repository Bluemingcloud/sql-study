-- TRIGGER
-- 트리거는 테이블에 부착한 형태로 AFTER, BEFORE 트리거가 있습니다.
-- AFTER : DML 문장(INSERT, UPDATE, DELETE) 이 타겟 테이블에 실행된 이후에 동작
-- BEFORE : DML 문장(INSERT, UPDATE, DELETE) 이 타겟 테이블에 실행되기 전에 동작
SET SERVEROUTPUT ON;
DROP TABLE TBL_TEST;
CREATE TABLE TBL_TEST(
    ID VARCHAR2(30),
    TEXT VARCHAR2(30)
);

DESC TBL_TEST;

-- TRIGGER 생성
CREATE OR REPLACE TRIGGER TBL_TEST_TRG
    AFTER UPDATE OR INSERT OR DELETE -- TRIGGER 종류 와 동작 시점
    ON TBL_TEST -- 부착할 테이블
    FOR EACH ROW -- 모든 행에 적용
BEGIN
    DBMS_OUTPUT.PUT_LINE('트리거 동작함!');
END;

INSERT INTO TBL_TEST VALUES('TEST1', 'AAA123');

UPDATE TBL_TEST SET TEXT = 'HELLO!' WHERE ID = 'TEST1';

DELETE FROM TBL_TEST WHERE ID = 'TEST1';
SELECT * FROM TBL_TEST;

--------------------------------------------------------------------------------
-- AFTER TRIGGER
-- :OLD 참조전 값 (I : INSERT 전 자료, U : UPDATE 전 자료, D : DELETE 전 자료)

CREATE TABLE TBL_USER(
    ID VARCHAR2(20) PRIMARY KEY,
    NAME VARCHAR2(20),
    ADDRESS VARCHAR2(30)
);

CREATE TABLE TBL_USER_BACKUP(
    ID VARCHAR2(20),
    NAME VARCHAR2(20),
    ADDRESS VARCHAR2(30),
    UPDATEDATE DATE DEFAULT SYSDATE,
    M_TYPE CHAR(10), --변경타입
    M_USER VARCHAR2(20) --변경한 사용자
);

-- TBL_USER 에 UPDATE OR DELETE 가 일어나면, 기존데이터를 TBL_USER_BACKUP 에 백업
CREATE OR REPLACE TRIGGER TBL_USER_BACKUP_TRG
    AFTER UPDATE OR DELETE
    ON TBL_USER
    FOR EACH ROW
DECLARE
    -- DECLARE 구문으로 변수 사용
    V VARCHAR2(10); -- 지역 변수 (해당 블록 안에서만 사용)
BEGIN
    IF UPDATING THEN -- UPDATING : UPDATE 가 일어나면 TRUE
        V := '수정';
    ELSIF DELETING THEN -- DELETING : DELETE 가 일어나면 TRUE
        V := '삭제';
    END IF;
    
    -- :OLD 사용으로 백업
    INSERT INTO TBL_USER_BACKUP VALUES(:OLD.ID, :OLD.NAME, :OLD.ADDRESS, SYSDATE, V, USER() );
    
END;

INSERT INTO TBL_USER VALUES('AAA', '홍길동', 'AAA');
INSERT INTO TBL_USER VALUES('BBB', '홍길자', 'BBB');

UPDATE TBL_USER SET NAME = '김길동' WHERE ID = 'AAA';
DELETE FROM TBL_USER WHERE ID = 'BBB';

SELECT * FROM TBL_USER;
SELECT * FROM TBL_USER_BACKUP;
-- BEFORE TRIGGER
-- :NEW 참조 후 값(I : INSERT 할 자료, U : UPDATE 할 자료)
CREATE OR REPLACE TRIGGER TBL_USER_MASKING_TRG
    BEFORE INSERT OR UPDATE
    ON TBL_USER
    FOR EACH ROW
BEGIN
    -- INSERT 가 되기 전에
    :NEW.NAME := RPAD(SUBSTR(:NEW.NAME, 1, 1), LENGTH(:NEW.NAME) + 1, '*');
END;
--

INSERT INTO TBL_USER VALUES('CCC', '홍길동', '서울시');
INSERT INTO TBL_USER VALUES('DDD', '신사임당', '경기도');
UPDATE TBL_USER SET NAME = '홍길동' WHERE ID = 'CCC';
UPDATE TBL_USER SET NAME = '신사임당' WHERE ID = 'DDD';
SELECT * FROM TBL_USER;