-- INSERT
-- TABLE 에 데이터 추가
-- TABLE 구조를 빠르게 확인하는 방법
DESC DEPARTMENTS;

-- 첫번째 방법
INSERT INTO DEPARTMENTS VALUES(280, 'DEVELOPER', NULL, 1700);
SELECT * FROM DEPARTMENTS;

-- DML 문은 트랜잭션이 항상 기록된다. 
-- 실제 TABLE 에 저장된 것은 아니기 때문에 되돌리기가 가능하다.
ROLLBACK;

-- 두번째 방법
-- COLUMN 명 만 지정가능
INSERT INTO DEPARTMENTS(DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID) VALUES(280, 'Developer', 1700);
SELECT * FROM DEPARTMENTS;

-- INSERT 구문도 서브쿼리가 됩니다
-- INSERT 서브쿼리 (단일행)
INSERT INTO DEPARTMENTS(DEPARTMENT_ID, DEPARTMENT_NAME) VALUES(
    (SELECT MAX(DEPARTMENT_ID) + 10 FROM DEPARTMENTS), 'Developer');
SELECT * FROM DEPARTMENTS;

-- INSERT 서브쿼리 (여러행)
CREATE TABLE EMPS AS (SELECT * FROM EMPLOYEES WHERE 1 = 2); -- TABLE 구조 복사
SELECT * FROM EMPS; -- 빈 테이블. 원본테이블의 특정 데이터를 퍼다 날라보기

DESC EMPS;
INSERT INTO EMPS(EMPLOYEE_ID, LAST_NAME, EMAIL, HIRE_DATE, JOB_ID)
(SELECT EMPLOYEE_ID, LAST_NAME, EMAIL, HIRE_DATE, JOB_ID FROM EMPLOYEES WHERE JOB_ID = 'SA_MAN');

COMMIT; -- 트랜잭션을 반영함. 데이터 적용

--------------------------------------------------------------------------------
-- UPDATE
SELECT * FROM EMPS;

-- UPDATE 구문을 사용하기 전에는 SELECT 로 해당 값이 고유한 행인지 확인하고, 업데이트 처리해야합니다.
SELECT * FROM EMPS WHERE EMPLOYEE_ID = 148;
UPDATE EMPS SET SALARY = 1000, COMMISSION_PCT = 0.1
WHERE EMPLOYEE_ID = 148; -- KEY 를 조건에 적는게 일반적입니다.

UPDATE EMPS SET SALARY = NVL(SALARY, 0) + 1000 WHERE EMPLOYEE_ID >= 145;

-- UPDATE 구문의 서브쿼리절
-- 첫번째 (단일행)
SELECT * FROM EMPS;
UPDATE EMPS SET SALARY = (SELECT SALARY FROM EMPLOYEES WHERE EMPLOYEE_ID = 100) WHERE EMPLOYEE_ID = 148;
SELECT SALARY FROM EMPLOYEES WHERE EMPLOYEE_ID = 100;
ROLLBACK;

-- 두번째 (여러행)
UPDATE EMPS
SET (SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID) 
= (SELECT SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID FROM EMPLOYEES WHERE EMPLOYEE_ID = 100)
WHERE EMPLOYEE_ID = 148;
SELECT * FROM EMPS;

-- 세번째 (WHERE 절에서 사용)
SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG';
UPDATE EMPS
SET SALARY = 1000
WHERE EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG');